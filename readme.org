#+title: Readme

Try to find all «postes» for a given set of «sections»

* Dependencies
- bs4
- urllib3

* Usage
#+begin_src bash :dir ./ :results output
chmod +x filter_postes
./filter_postes >> postes.html
#+end_src

#+RESULTS:
: /home/accacio/git/concours_galaxie

* Code
#+begin_src python :tangle filter_postes
#!/usr/bin/env python3

from urllib import request
from bs4 import BeautifulSoup
#+end_src

#+begin_src python :tangle filter_postes
# TODO(accacio): use stdinput
section_choose = set([61])
corps_choose = 'MCF'
#+end_src

#+begin_src python :tangle filter_postes
# TODO(accacio): add prepublie
url = 'https://www.galaxie.enseignementsup-recherche.gouv.fr/ensup/ListesPostesPublies/Emplois_publies_TrieParRegion.html'
req = request.urlopen(url)
#+end_src

#+begin_src python :tangle filter_postes
def decode_replace_tags(row):
    decoded = row.decode('utf-8')
    if '<th' in decoded:
        return decoded.replace('</td>','</th>')
    else:
        return decoded
html_doc = ''.join(map(decode_replace_tags,req))

html_struct = BeautifulSoup(html_doc,'html.parser')
table = html_struct.find_all("table","tab")
rows = table[0].find_all('tr')
header = rows[0]
postes_and_regions = rows[1:]
#+end_src

#+begin_src python :tangle filter_postes
by_region=[]
for row in postes_and_regions:
    columns = row.find_all('td')
    if len(columns)==1:
        by_region.append([row])
    else:
        corps = columns[5].text
        sections = set([ int(td.text) for td in columns[7:10] if td.text != ''])
        if corps==corps_choose and (section_choose & sections):
            # print(corps, ' ', sections)
            by_region[-1].append(row)

no_empty_region = filter(lambda data_by_region : len(data_by_region)>1 ,by_region)
out_table = ''.join([str(row) for region in no_empty_region for row in region])
#+end_src

#+begin_src python :tangle filter_postes
html_template = '''<!DOCTYPE HTML>
<html>
  <head>
    <title>Postes GALAXIE</title>
    <meta http-equiv=Content-Type content="text/html; charset=utf-8">
    <style>
body {{font-family: sans;
font-size: 12px;}}

table {{
border-spacing: 0px; border-collapse: collapse;}}

td, th {{
border:1px solid black;}}

th {{
font-weight:bold; background-color:#DDD}}

td.comment {{
text-align: center;
font-style: italic;
background-color:#EEE
}}

/*Etablissement et lieu*/
td:nth-child(2), td:nth-child(15) {{
  background-color: #AACCFF;
}}

/*Sections*/
td:nth-child(8), td:nth-child(9), td:nth-child(10) {{
  background-color: #FFFFDD;
}}

/*Profil*/
td:nth-child(14) {{
  background-color: #DDFFDD;
}}
    </style>
  </head>
  <body>
    <h1>Liste des postes triés par région pour {corps} (sections {sections}) </h1>
    <table>
      <thead>
      {header}
      </thead>
      <tbody>
      {table}
      </tbody>
    </table>
  </body>
</html>
'''

html_out = html_template.format(header = header,
                                table=out_table,
                                corps=corps_choose,
                                sections=section_choose
                                )
print(html_out)
#+end_src
* Outro
This work is heavily inspired by https://github.com/pierre-haessig/galaxie-esup
